package classmaster.ui.Staff;

import classmaster.models.Attendance;
import classmaster.models.Course;
import classmaster.models.CourseAssignmentDto;
import classmaster.models.Student;
import classmaster.models.StudentCourseAttendance;
import classmaster.repository.AttendanceRepository;
import classmaster.repository.Component;
import classmaster.repository.ComponentRegistry;
import classmaster.repository.CourseRepository;
import classmaster.repository.StudentRepository;
import classmaster.utils.Page;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MarkAttendence extends javax.swing.JFrame {

    private Page page;
    private StudentRepository studentRepository;
    private CourseRepository courseRepository;
    private List<CourseAssignmentDto> studentCourse;
    private AttendanceRepository attendanceRepository;
    private List<StudentCourseAttendance> studentAttendance;

    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("hh:mm a");

    public MarkAttendence(Page page) {
        initComponents();
        this.page = page;
        tblClasses.fixTable(jScrollPane3);

        courseDatePanel.setVisible(false);
        btnCancel.setVisible(false);

        Component Component = ComponentRegistry.getInstance()
                .getComponent("AuthRepository");

        Component studentComponent = ComponentRegistry.getInstance().getComponent("StudentRepository");
        if (studentComponent instanceof StudentRepository) {
            studentRepository = (StudentRepository) studentComponent;
        }

        Component courseComponent = ComponentRegistry.getInstance()
                .getComponent("CourseRepository");
        if (courseComponent instanceof CourseRepository) {
            this.courseRepository = (CourseRepository) courseComponent;
        }

        Component attendanceComponent = ComponentRegistry.getInstance()
                .getComponent("AttendanceRepository");
        if (attendanceComponent instanceof AttendanceRepository) {
            this.attendanceRepository = (AttendanceRepository) attendanceComponent;
        }

        onSelect();

    }

    private void onSelect() {
        cbClasses.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                if (cbClasses.getSelectedIndex() == -1) {
                    return;
                }
                modifyCourseInfo();

                getStudentAttendance(String.valueOf(cbClasses.getSelectedItem()));
            }
        });
    }

    private void modifyCourseInfo() {
        CourseAssignmentDto dto = studentCourse.get(cbClasses.getSelectedIndex());
        lblCourseInfo.setText("Every " + dto.getDay() + " Start at " + dto.getFromTime().format(dateTimeFormatter));
    }

    private void getStudentAttendance(String selectedCourse) {
        try {
            CourseAssignmentDto selectedCourseDto = getSelectedCourseDto(selectedCourse);
            int studentId = Integer.valueOf(txtFieldStudentId.getText());

            if (selectedCourseDto == null) {
                System.out.println("----- invalid course  ------");
                return;
            }

            studentAttendance = this.attendanceRepository
                    .findStudentCourseAttendance(studentId, selectedCourseDto.getCourseId());
            updateTable(studentAttendance);

        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void updateTable(List<StudentCourseAttendance> studentAttendance) {

        DefaultTableModel model = (DefaultTableModel) tblClasses.getModel();
        model.setRowCount(0);

        for (StudentCourseAttendance dto : studentAttendance) {
            model.addRow(new Object[]{dto.getAttendDate(), dto.getAttendTime(), dto.getCourseStartTime(),
                dto.getAttendTime().isAfter(dto.getCourseStartTime()) ? "Yes" : "No"
            });
        }

        btnEdit.setVisible(studentAttendance.size() > 0);
        btnDelete.setVisible(studentAttendance.size() > 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFieldStudentId = new javax.swing.JTextField();
        btnStuSearch = new javax.swing.JButton();
        courseDatePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblNameInfo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbClasses = new javax.swing.JComboBox<>();
        lblCourseInfo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dateTimePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        btnCancel = new javax.swing.JButton();
        btnMark = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClasses = new classmaster.ui.component.darktable.TableDark();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassMaster");
        setBackground(new java.awt.Color(0, 51, 153));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setForeground(new java.awt.Color(51, 51, 51));

        jLabel8.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mark Attendence");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classmaster/images/logo/teacher.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(241, 254, 241));

        jLabel2.setText("Student Id");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        txtFieldStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldStudentIdActionPerformed(evt);
            }
        });

        btnStuSearch.setText("Search");
        btnStuSearch.setBackground(new java.awt.Color(0, 153, 153));
        btnStuSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnStuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuSearchActionPerformed(evt);
            }
        });

        courseDatePanel.setBackground(new java.awt.Color(241, 254, 241));

        jLabel5.setText("Student Info");
        jLabel5.setBackground(new java.awt.Color(0, 51, 102));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel6.setText("Name");
        jLabel6.setBackground(new java.awt.Color(0, 51, 102));

        lblNameInfo.setText("Name");
        lblNameInfo.setBackground(new java.awt.Color(0, 51, 102));

        jLabel4.setText("Course");

        cbClasses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCourseInfo.setText("Name");
        lblCourseInfo.setBackground(new java.awt.Color(0, 51, 102));

        jLabel3.setText("Date");

        btnCancel.setText("Cancel");
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 153, 153));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnMark.setText("Mark");
        btnMark.setBackground(new java.awt.Color(0, 153, 153));
        btnMark.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout courseDatePanelLayout = new javax.swing.GroupLayout(courseDatePanel);
        courseDatePanel.setLayout(courseDatePanelLayout);
        courseDatePanelLayout.setHorizontalGroup(
            courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(courseDatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(courseDatePanelLayout.createSequentialGroup()
                        .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(265, 265, 265))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, courseDatePanelLayout.createSequentialGroup()
                        .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(courseDatePanelLayout.createSequentialGroup()
                                .addComponent(btnCancel)
                                .addGap(36, 36, 36)
                                .addComponent(btnMark))
                            .addGroup(courseDatePanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                                .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, courseDatePanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCourseInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbClasses, 0, 295, Short.MAX_VALUE)
                                    .addComponent(lblNameInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        courseDatePanelLayout.setVerticalGroup(
            courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(courseDatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblNameInfo))
                .addGap(18, 18, 18)
                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCourseInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(courseDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMark)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFieldStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStuSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(courseDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFieldStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStuSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(courseDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jLabel7.setText("Attendance History");
        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));

        tblClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Class Started Time", "Late"
            }
        ));
        jScrollPane3.setViewportView(tblClasses);

        btnEdit.setText("Edit");
        btnEdit.setBackground(new java.awt.Color(0, 153, 153));
        btnEdit.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI Symbol", 1, 13)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel1.setText("Back");
        btnCancel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel1.setForeground(new java.awt.Color(0, 153, 153));
        btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel1)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:

            if (tblClasses.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(rootPane, "Select an attendence record to delete");
                return;
            }

            if (txtFieldStudentId.getText() == null || txtFieldStudentId.getText().isBlank()) {
                System.out.println("Student id is null or empty");
                return;
            }

            int studentId = Integer.valueOf(txtFieldStudentId.getText());

            String selectedCourse = String.valueOf(cbClasses.getSelectedItem());

            if (selectedCourse == null) {
                System.out.println("select a course before delete");
                return;
            }
            CourseAssignmentDto selectedCourseDto = getSelectedCourseDto(selectedCourse);

            String strDate = String.valueOf(tblClasses.getModel().getValueAt(tblClasses.getSelectedRow(), 0));
            LocalDate date = LocalDate.parse(strDate);

            System.out.println(" student id : " + studentId
                    + " selectd course " + selectedCourseDto.getCourseId()
                    + " date : " + date
            );

            int status = this.attendanceRepository.deleteAttendace(studentId, selectedCourseDto.getCourseId(), date);
            if (status == 1) {
                System.out.println("successfully deleted attendance");
                getStudentAttendance(selectedCourse);
                clean();
            }

        } catch (SQLException ex) {
            System.out.println("failed to delete attendance");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        if (tblClasses.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(rootPane, "Select an attendence record to edit");
            return;
        }

        String stStr = String.valueOf(tblClasses.getModel().getValueAt(tblClasses.getSelectedRow(), 0));
        LocalDate selectedRowLocalDate = LocalDate.parse(stStr);

        StudentCourseAttendance selectedAttendance = null;
        for (StudentCourseAttendance sca : studentAttendance) {
            if (sca.getAttendDate().isEqual(selectedRowLocalDate)) {
                selectedAttendance = sca;
                break;
            }
        }

        if (selectedAttendance == null) {
            System.out.println("-- selected attendance cannot found ---");
            return;
        }

        btnCancel.setVisible(true);
        tblClasses.setEnabled(false);
        cbClasses.setEnabled(false);
        txtFieldStudentId.setEnabled(false);

        dateTimePicker.setDateTimePermissive(selectedAttendance.getAttendDate().atTime(selectedAttendance.getAttendTime()));

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel1ActionPerformed
        // TODO add your handling code here:
        this.page.onChildPageClose();
        this.dispose();
    }//GEN-LAST:event_btnCancel1ActionPerformed

    private void btnStuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuSearchActionPerformed
        try {
            int studentId;

            if (txtFieldStudentId.getText().isBlank() || txtFieldStudentId.getText() == null) {
                JOptionPane.showMessageDialog(rootPane, "Please add a student id first");
                return;
            } else {
                studentId = Integer.valueOf(txtFieldStudentId.getText());
            }

            Student st = studentRepository.getStudentById(studentId);
            if (st == null) {
                JOptionPane.showMessageDialog(rootPane, "cannot find student for id " + studentId);
                return;
            }

            lblNameInfo.setText(st.getFirstName() + " " + st.getLastName());

            studentCourse = courseRepository.getAllStudentCourses(studentId);
            displayClassesComboBox(studentCourse);

            courseDatePanel.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnStuSearchActionPerformed

    private void txtFieldStudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldStudentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldStudentIdActionPerformed

    private void btnMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkActionPerformed

        try {
            int studentId = Integer.parseInt(txtFieldStudentId.getText());

            String selectedCourse = String.valueOf(cbClasses.getSelectedItem());

            CourseAssignmentDto selectedCourseDto = getSelectedCourseDto(selectedCourse);

            if (selectedCourseDto == null) {
                System.out.println("----- invalid course  ------");
                return;
            }

            Attendance attendance = new Attendance();
            attendance.setStudentId(studentId);
            attendance.setClassId(selectedCourseDto.getCourseId());

            System.out.println(dateTimePicker.getDatePicker().getComponentDateTextField().getText().isBlank());
            System.out.println(dateTimePicker.getTimePicker().getComponentTimeTextField().getText().isBlank());

            LocalDateTime dateTime = dateTimePicker.getDateTimePermissive();
            if (dateTime != null && dateTimePicker.getDatePicker().getComponentDateTextField().getText().isBlank() == false
                    && dateTimePicker.getTimePicker().getComponentTimeTextField().getText().isBlank() == false) {

                attendance.setAttendDate(dateTime.toLocalDate());
                attendance.setAttendTime(dateTime.toLocalTime());

            } else {
                JOptionPane.showMessageDialog(rootPane, "All fields are required");
                return;
            }

            if (validateCourse(selectedCourseDto, dateTime)) {
                this.attendanceRepository.markAttendance(attendance);
                JOptionPane.showMessageDialog(rootPane, "Successfully marked attendance");
            }

            getStudentAttendance(selectedCourse);
            clean();

            // TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to mark attendance");

            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnMarkActionPerformed

    private boolean validateCourse(CourseAssignmentDto selectedCourseDto, LocalDateTime dateTime) {
        if (!selectedCourseDto.getDay().equalsIgnoreCase(String.valueOf(dateTime.getDayOfWeek()))) {
            int result = JOptionPane.showConfirmDialog(rootPane, "Selected day is not equal to the day of the class."
                    + " Do you want to continue?");
            System.out.println(result);
            if (result == JOptionPane.NO_OPTION || result == JOptionPane.CANCEL_OPTION) {
                return false;
            }
        }
        return true;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clean();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private CourseAssignmentDto getSelectedCourseDto(String selectedCourse) {
        CourseAssignmentDto selectedCourseDto = null;
        for (CourseAssignmentDto dto : studentCourse) {
            if (selectedCourse.equals(dto.getCourseName())) {
                selectedCourseDto = dto;
                break;
            }
        }

        return selectedCourseDto;
    }

    private void clean() {
        btnCancel.setVisible(false);
        tblClasses.setEnabled(true);
        tblClasses.clearSelection();
        cbClasses.setEnabled(true);
        txtFieldStudentId.setEnabled(true);
        dateTimePicker.clear();
    }

    private void displayClassesComboBox(List<CourseAssignmentDto> courses) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbClasses.getModel();
        model.removeAllElements();
        for (CourseAssignmentDto dto : courses) {
            model.addElement(dto.getCourseName());
        }
        cbClasses.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancel1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnMark;
    private javax.swing.JButton btnStuSearch;
    private javax.swing.JComboBox<String> cbClasses;
    private javax.swing.JPanel courseDatePanel;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCourseInfo;
    private javax.swing.JLabel lblNameInfo;
    private classmaster.ui.component.darktable.TableDark tblClasses;
    private javax.swing.JTextField txtFieldStudentId;
    // End of variables declaration//GEN-END:variables

}
