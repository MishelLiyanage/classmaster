/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classmaster.ui.teacher;

import classmaster.models.Account;
import classmaster.models.AttendanceSummary;
import classmaster.models.Course;
import classmaster.models.CourseNoOfStudentsDto;
import classmaster.models.DailyCourseAttendanceDto;
import classmaster.models.StudentCourseAttendance;
import classmaster.models.TeacherClassPaymentSummaryDto;
import classmaster.repository.AttendanceRepository;
import classmaster.repository.AuthRepository;
import classmaster.repository.Component;
import classmaster.repository.ComponentRegistry;
import classmaster.repository.CourseRepository;
import classmaster.repository.TeacherRepository;
import classmaster.utils.Page;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.util.Rotation;

/**
 *
 * @author bhagy
 */
public class ViewClassCharts extends javax.swing.JFrame {

    private TeacherRepository teacherRepository;
    private AuthRepository authRepository;
    private List<CourseNoOfStudentsDto> courseNoOfStudents;
    private Page page;
    private AttendanceRepository attendanceRepository;
    private CourseRepository courseRepository;
    private List<LocalDate> classDates;
    private List<AttendanceSummary> attendanceSummary;
    private List<StudentCourseAttendance> attendanceList;

    public ViewClassCharts(Page page) {

        Component teacherComponent = ComponentRegistry.getInstance()
                .getComponent("TeacherRepository");

        if (teacherComponent instanceof TeacherRepository) {
            this.teacherRepository = (TeacherRepository) teacherComponent;
        }

        Component Component = ComponentRegistry.getInstance()
                .getComponent("AuthRepository");

        if (Component instanceof AuthRepository) {
            this.authRepository = (AuthRepository) Component;
        }

        Component attendanceComponent = ComponentRegistry.getInstance()
                .getComponent("AttendanceRepository");
        if (attendanceComponent instanceof AttendanceRepository) {
            this.attendanceRepository = (AttendanceRepository) attendanceComponent;
        }

        Component courseComponent = ComponentRegistry.getInstance()
                .getComponent("CourseRepository");
        if (courseComponent instanceof CourseRepository) {
            this.courseRepository = (CourseRepository) courseComponent;
        }

        this.page = page;

        initComponents();

        lblSelectDate.setVisible(false);
        cbClsDate.setVisible(false);
        lblEmptyDataMsg.setVisible(false);

        loadCourseNoOfStudents();
        displayAsChart();
        prepareClassNamesComboBox();

        addDateComboBoxListener();
    }

    private void addDateComboBoxListener() {

        this.cbClsDate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                loadAttendanceTable();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        panelAttendanceCboxPanel = new javax.swing.JPanel();
        cbCourses = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        yearChooser = new com.toedter.calendar.JYearChooser();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        btnSearch = new javax.swing.JButton();
        cbClsDate = new javax.swing.JComboBox<>();
        lblSelectDate = new javax.swing.JLabel();
        lblEmptyDataMsg = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAttendance = new classmaster.ui.component.darktable.TableDark();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClsStudentCount = new classmaster.ui.component.darktable.TableDark();
        panelChart = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jYearAnalytics = new com.toedter.calendar.JYearChooser();
        jMonthAnalytics = new com.toedter.calendar.JMonthChooser();
        btnSearchAnalytics = new javax.swing.JButton();
        panelAttendanceSummaryChart = new javax.swing.JPanel();
        cmbAnalyticsCourses = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jYearOverall = new com.toedter.calendar.JYearChooser();
        jLabel11 = new javax.swing.JLabel();
        jMonthOverall = new com.toedter.calendar.JMonthChooser();
        btnFilter = new javax.swing.JButton();
        pnlOverall = new javax.swing.JPanel();
        btnSearch1 = new javax.swing.JButton();

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setForeground(new java.awt.Color(51, 51, 51));

        jLabel5.setText("Monthly Payment History");
        jLabel5.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classmaster/images/logo/teacher.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassMaster");
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setToolTipText("");

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setForeground(new java.awt.Color(51, 51, 51));

        jLabel7.setText("Course Attendence Analytics");
        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classmaster/images/logo/teacher.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelAttendanceCboxPanel.setBackground(new java.awt.Color(250, 250, 250));

        jLabel1.setText("<html><h4>Select Year and Month</h4></html>");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jLabel3.setText("<html><h4>Select Course</h4></html>");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        btnSearch.setText("Search");
        btnSearch.setBackground(new java.awt.Color(0, 153, 153));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblSelectDate.setText("<html><h4>Select the Date</h4></html>");
        lblSelectDate.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        lblEmptyDataMsg.setText("<html><h4>Cannot find records</h4></html>");

        javax.swing.GroupLayout panelAttendanceCboxPanelLayout = new javax.swing.GroupLayout(panelAttendanceCboxPanel);
        panelAttendanceCboxPanel.setLayout(panelAttendanceCboxPanelLayout);
        panelAttendanceCboxPanelLayout.setHorizontalGroup(
            panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAttendanceCboxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAttendanceCboxPanelLayout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addGroup(panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmptyDataMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbClsDate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSelectDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))))
                    .addGroup(panelAttendanceCboxPanelLayout.createSequentialGroup()
                        .addGroup(panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelAttendanceCboxPanelLayout.createSequentialGroup()
                                .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSearch))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelAttendanceCboxPanelLayout.setVerticalGroup(
            panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAttendanceCboxPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAttendanceCboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addGap(18, 18, 18)
                .addComponent(lblSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbClsDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(lblEmptyDataMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Id", "Student Name", "Absent/present", "Date", "Time"
            }
        ));
        jScrollPane5.setViewportView(tblAttendance);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAttendanceCboxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panelAttendanceCboxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 203, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Attendance", jPanel2);

        tblClsStudentCount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Class Name", "Total Students"
            }
        ));
        jScrollPane3.setViewportView(tblClsStudentCount);

        panelChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Student Count", jPanel1);

        jLabel2.setText("Course Name");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel4.setText("Select Year and Month");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSearchAnalytics.setText("Search");
        btnSearchAnalytics.setBackground(new java.awt.Color(0, 153, 153));
        btnSearchAnalytics.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearchAnalytics.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchAnalytics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAnalyticsActionPerformed(evt);
            }
        });

        panelAttendanceSummaryChart.setBackground(new java.awt.Color(204, 204, 204));
        panelAttendanceSummaryChart.setLayout(new java.awt.BorderLayout());

        cmbAnalyticsCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jYearAnalytics, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jMonthAnalytics, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSearchAnalytics, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbAnalyticsCourses, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(77, 77, 77)
                .addComponent(panelAttendanceSummaryChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAnalyticsCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jYearAnalytics, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jMonthAnalytics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchAnalytics)
                .addContainerGap(369, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAttendanceSummaryChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Attendance Analytics", jPanel3);

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));

        jLabel9.setText("You can view the monthly attendance fluctuations here. Choose the Year and Month to filter");

        jLabel10.setText("Year");
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel11.setText("Month");
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnFilter.setText("Filter");
        btnFilter.setBackground(new java.awt.Color(0, 153, 153));
        btnFilter.setForeground(new java.awt.Color(255, 255, 255));
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jYearOverall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMonthOverall, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFilter))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jYearOverall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jMonthOverall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilter))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlOverall.setBackground(new java.awt.Color(255, 255, 255));
        pnlOverall.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlOverall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOverall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Overall Analytics", jPanel5);

        btnSearch1.setText("Back");
        btnSearch1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch1.setForeground(new java.awt.Color(0, 153, 153));
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch1))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        try {
            CourseNoOfStudentsDto dto = courseNoOfStudents.get(cbCourses.getSelectedIndex());

            int year = yearChooser.getYear();
            int month = monthChooser.getMonth() + 1;
            
            //get the course dates
            classDates = this.courseRepository.getCompletedCourseDates(dto.getCourseID(), year, month);

            //display them in the combo box
            prepareClassDatesComboBox();

        } catch (SQLException ex) {
            System.out.println("failed to fetch class dates");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        this.page.onChildPageClose();
        this.dispose();
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void btnSearchAnalyticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAnalyticsActionPerformed

        try {
            CourseNoOfStudentsDto dto = courseNoOfStudents.get(cmbAnalyticsCourses.getSelectedIndex());

            int year = jYearAnalytics.getYear();
            int month = jMonthAnalytics.getMonth() + 1;

            attendanceSummary = this.courseRepository.findMonthlyAttendanceSummaryForClass(dto.getCourseID(), year, month);

            prepareAttendanceSummaryChart(attendanceSummary);

        } catch (SQLException ex) {
            System.out.println("failed to fetch class dates");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchAnalyticsActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        loadOverallAttendanceSummary();

    }//GEN-LAST:event_btnFilterActionPerformed

    private void loadOverallAttendanceSummary() {
        int year = jYearOverall.getYear();
        int month = jMonthOverall.getMonth();

        Account currentUser = this.authRepository.getCurrentAccount();

        try {
            List<DailyCourseAttendanceDto> overallAttendance = this.attendanceRepository.getDailyAttendanceSummary(currentUser.getId(), year, month + 1);

            XYDataset dataset = createOverallAttendanceDataSet(overallAttendance);

            JFreeChart overallChart = ChartFactory.createTimeSeriesChart(
                    "Overall Attendance Summary for " + jYearOverall.getYear() + " " + Month.of(jMonthOverall.getMonth() + 1), //Chart Title  
                    "Course conducted Date", // Category axis  
                    "Number of students attended", // Value axis  
                    dataset
            );

            ChartPanel panel = new ChartPanel(overallChart);

            pnlOverall.removeAll();
            pnlOverall.add(panel, BorderLayout.CENTER);
            pnlOverall.validate();
        } catch (SQLException ex) {
            Logger.getLogger(ViewClassCharts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private TimeSeriesCollection createOverallAttendanceDataSet(List<DailyCourseAttendanceDto> attendance) {
        TimeSeriesCollection dataset = new TimeSeriesCollection();  
        
        Set<String> courses = new HashSet<>();
        
        for(DailyCourseAttendanceDto cAtt: attendance){
            courses.add(cAtt.getCourseName());
        }
        
        Map<String,TimeSeries> series = new HashMap<>();
        
        for(String course: courses){
            series.put(course,new TimeSeries(course));
            System.out.println(course);
        }
        
        
        for (DailyCourseAttendanceDto dto : attendance) {
            
            TimeSeries courseSeries = series.get(dto.getCourseName());
            int day = dto.getAttendDate().getDayOfMonth();
            int month = dto.getAttendDate().getMonthValue();
            int year = dto.getAttendDate().getYear();
            courseSeries.add(new Day(day, month, year),dto.getTotalAttendandts());

        }
        
        for(String course: courses){
            dataset.addSeries(series.get(course));
        }
        
        return dataset;


    }

    private void prepareAttendanceSummaryChart(List<AttendanceSummary> summary) {
        // Create Dataset  
        CategoryDataset analyticDataset = createAttendanceSummaryDataset(summary);

        //Create chart  
        JFreeChart chart = ChartFactory.createBarChart(
                "Attendance Summary Per Course", //Chart Title  
                "Class held date", // Category axis  
                "No of Students", // Value axis  
                analyticDataset,
                PlotOrientation.VERTICAL,
                true, true, false
        );

        ChartPanel panel = new ChartPanel(chart);

        panelAttendanceSummaryChart.removeAll();
        panelAttendanceSummaryChart.add(panel, BorderLayout.CENTER);
        panelAttendanceSummaryChart.validate();

    }

    private CategoryDataset createAttendanceSummaryDataset(List<AttendanceSummary> summary) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (AttendanceSummary item : summary) {
            dataset.addValue(item.getTotalStudent() - item.getTotalAttendants(), "ABSENT", item.getScheduledDate());
            dataset.addValue(item.getTotalAttendants(), "PRESENT", item.getScheduledDate());

        }

        return dataset;
    }

    public void prepareClassDatesComboBox() {

        lblSelectDate.setVisible(false);
        cbClsDate.setVisible(false);

        DefaultComboBoxModel model = (DefaultComboBoxModel) cbClsDate.getModel();
        model.removeAllElements();
        for (LocalDate date : classDates) {
            model.addElement(date.toString());
        }
        cbClsDate.setModel(model);

        if (classDates.size() > 0) {
            lblSelectDate.setVisible(true);
            cbClsDate.setVisible(true);
            lblEmptyDataMsg.setVisible(false);
        } else {

            lblEmptyDataMsg.setVisible(true);
        }
    }

    public void prepareClassNamesComboBox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbCourses.getModel();
        model.removeAllElements();

        //attendance analytics
        DefaultComboBoxModel analyticsCourseCmb = (DefaultComboBoxModel) cmbAnalyticsCourses.getModel();
        analyticsCourseCmb.removeAllElements();

        for (CourseNoOfStudentsDto dto : courseNoOfStudents) {
            model.addElement(dto.getCourseName());
            analyticsCourseCmb.addElement(dto.getCourseName());
        }
        cbCourses.setModel(model);
        cmbAnalyticsCourses.setModel(analyticsCourseCmb);
    }

    public void displayAsChart() {
        PieDataset dataset = createDataset(courseNoOfStudents);
        // based on the dataset we create the chart
        JFreeChart chart = createChart(dataset, "Total Student Count per Course");
        // we put the chart into a panel
        ChartPanel chartPanel = new ChartPanel(chart);

        panelChart.removeAll();
        panelChart.add(chartPanel, BorderLayout.CENTER);
        panelChart.validate();

    }

    private PieDataset createDataset(List<CourseNoOfStudentsDto> courseNoOfStudents) {
        DefaultPieDataset result = new DefaultPieDataset();

        int sum = 0;
        for (CourseNoOfStudentsDto dto : courseNoOfStudents) {
            sum += dto.getNoOfStudents();
        }

        for (CourseNoOfStudentsDto dto : courseNoOfStudents) {

            double percentage = ((double) dto.getNoOfStudents() / sum) * 100.0;
            System.out.println("key : " + dto.getCourseName() + " percentage : " + percentage);
            result.setValue(dto.getCourseName(), percentage);
        }

        return result;

    }

    /**
     * Creates a chart
     */
    private JFreeChart createChart(PieDataset dataset, String title) {

        JFreeChart chart = ChartFactory.createPieChart3D(
                title, // chart title
                dataset, // data
                false, // include legend
                false,
                false
        );

        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setStartAngle(290);
        plot.setDirection(Rotation.CLOCKWISE);
        plot.setForegroundAlpha(0.5f);
        return chart;

    }

    public void loadCourseNoOfStudents() {
        int teacherID = this.authRepository.getCurrentAccount().getId();

        try {
            courseNoOfStudents = this.teacherRepository.getAllCourseNoOfStudents(teacherID);
        } catch (SQLException ex) {
            Logger.getLogger(ViewClassCharts.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel model = (DefaultTableModel) tblClsStudentCount.getModel();
        model.setRowCount(0);

        for (CourseNoOfStudentsDto dto : courseNoOfStudents) {
            System.out.println(dto);
            model.addRow(new Object[]{dto.getCourseID(), dto.getCourseName(), dto.getNoOfStudents(), dto.getDay()});
        }

    }

    private void loadAttendanceTable() {
        CourseNoOfStudentsDto dto = courseNoOfStudents.get(cbCourses.getSelectedIndex());

        if (cbClsDate.getSelectedIndex() < 0) {
            return;
        }

        String selectedDate = String.valueOf(cbClsDate.getSelectedItem());

        try {
            attendanceList = this.attendanceRepository.getAttendanceForCourse(dto.getCourseID(), LocalDate.parse(selectedDate));
            if (attendanceList.size() > 0) {
                updateTable(attendanceList);
            }
        } catch (SQLException ex) {
            System.out.println("Failed to load course attendance ");
            ex.printStackTrace();
        }
    }

    public void updateTable(List<StudentCourseAttendance> attendanceList) {

        DefaultTableModel model = (DefaultTableModel) tblAttendance.getModel();
        model.setRowCount(0);

        for (StudentCourseAttendance dto : attendanceList) {
            String absent;
            if (dto.getAttendDate() == null) {
                absent = "ABSENT";
            } else {
                absent = "PRESENT";
            }

            String attendDate = dto.getAttendDate() == null ? "N/A" : dto.getAttendDate().toString();
            String attendTime = dto.getAttendTime() == null ? "N/A" : dto.getAttendTime()
                    .format(DateTimeFormatter.ofPattern("hh:mm a"));

            model.addRow(new Object[]{dto.getStudentId(), dto.getFirstName() + " " + dto.getLastName(),
                absent, attendDate, attendTime});

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSearchAnalytics;
    private javax.swing.JComboBox<String> cbClsDate;
    private javax.swing.JComboBox<String> cbCourses;
    private javax.swing.JComboBox<String> cmbAnalyticsCourses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.calendar.JMonthChooser jMonthAnalytics;
    private com.toedter.calendar.JMonthChooser jMonthOverall;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JYearChooser jYearAnalytics;
    private com.toedter.calendar.JYearChooser jYearOverall;
    private javax.swing.JLabel lblEmptyDataMsg;
    private javax.swing.JLabel lblSelectDate;
    private com.toedter.calendar.JMonthChooser monthChooser;
    private javax.swing.JPanel panelAttendanceCboxPanel;
    private javax.swing.JPanel panelAttendanceSummaryChart;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel pnlOverall;
    private classmaster.ui.component.darktable.TableDark tblAttendance;
    private classmaster.ui.component.darktable.TableDark tblClsStudentCount;
    private com.toedter.calendar.JYearChooser yearChooser;
    // End of variables declaration//GEN-END:variables
}
